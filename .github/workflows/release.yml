name: Release
# Secure execution of continuous integration jobs
# which are performed upon completion of the
# "Continuous Integration" workflow
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
on:
  workflow_run:
    workflows: ['Continuous Integration']
    types: [completed]
    branches: [master]

jobs:
  release:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.conclusion == 'success' &&
      (
        startsWith(github.event.workflow_run.head_commit.message, 'build: migrate from Travis CI to GitHub Actions') ||
        startsWith(github.event.workflow_run.head_commit.message, 'feat') ||
        startsWith(github.event.workflow_run.head_commit.message, 'fix') ||
        startsWith(github.event.workflow_run.head_commit.message, 'refactor') ||
        startsWith(github.event.workflow_run.head_commit.message, 'chore(deps): update dependency @sbb-esta')
      )
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_APP_PEM }}
      - uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Yarn Install
        uses: ./.github/actions/yarn-install

      - name: Run build
        run: yarn build

      - name: 'Release: Set git user'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      - name: 'Release: Create release with standard-version'
        run: |
          if [ -f CHANGELOG.md ]; then
            yarn standard-version
          else
            yarn standard-version --first-release
          fi
      - name: 'Release: Push release to repository'
        run: git push --follow-tags origin master

      - name: Install netlify CLI
        run: yarn global add netlify-cli
      - name: Publish to netlify
        run: netlify deploy --prod --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir ./dist/
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
